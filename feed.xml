<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://www.akinabdullahoglu.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://www.akinabdullahoglu.com/" rel="alternate" type="text/html" /><updated>2019-03-12T03:20:10+03:00</updated><id>http://www.akinabdullahoglu.com/</id><title type="html">Akın Abdullahoğlu.</title><subtitle>Programlama,NoSql, programlama hakkında yazılar,Java ,C# ,Git ,Açık kaynak, Kişisel Yazılar, Software Developer</subtitle><entry><title type="html">Kafamdakiler ve Genel Gündem</title><link href="http://www.akinabdullahoglu.com/Kafamdakiler/" rel="alternate" type="text/html" title="Kafamdakiler ve Genel Gündem" /><published>2019-03-10T03:30:22+03:00</published><updated>2019-03-10T03:30:22+03:00</updated><id>http://www.akinabdullahoglu.com/Kafamdakiler</id><content type="html" xml:base="http://www.akinabdullahoglu.com/Kafamdakiler/">&lt;p&gt;Merhabalar, aylar ayları devirdi ve hiç bir blog yazısı yazamadım. Kafamda bir çok konuyla ilgili yazı yazmak vardı hepsini parça parça kenara köşeye kaydettim, bunları hayata geçirmeye yeni yeni başladım aslında. Öncelikle ülkemizin ihtiyacı olan sıcaklığı ve sevgiyi ve barış’ı neden kaybettiği sorusu ara sıra aklıma gelmekte ve bunda da en büyük payın popüler kültürün insanlara dayattığı tüketim olgusunun, insanları mutsuzluğa itmeye sebep olarak görüyorum. Her kesimden insanın bu kadar birbirinden nefret edebilmesini ya da bir konuda verdiği emeğin hiçe sayılıp o emek sonucunu nasıl en vurucu biçimde eleştirebilirim sorusunun şeytani zihinlerde oluşmasını anlayamıyorum. Bu tür insanlara yabancı lugatta hater(nefret eden kimseler) deniliyor ve twitter’da bunlara bolca rastlamak mümkün, her konu hakkında sadece trollük kovalamak, eleştirmek ya da her şeyi mizaha vurmak bunları hepsini beğeni kazanma kaygısı ve popüler olmak uğruna yapmaları gerçekten acı bir durum diye düşünüyorum.&lt;/p&gt;

&lt;p&gt;Gündem olarak nedense sürekli olumsuz konuların sosyal medya ortamlarını işgal etmesi ve instagram içerisinde de sadece seks, yemek yeme ve cinsellik vurgusunun insanlara pompalanmasından dolayı rahatsız olup sosyal medya hesaplarıma bir süreliğine ara verdim. Twitter’ı zaten yukarıda kısaca anlattım ve bu gündem konuları beni biraz yordu, sürekli olumsuz haber görmekten ve kimseye de bir şey anlatamamaktan bıktım. Yaklaşık 4 aydan fazladır kapalı olan hesapları açıkçası hiç aramıyorum ve bu bana daha bol zaman bırakıyor bunları spora ve kitap okumaya ayırarak kendime bir şeyler katmaya çalışıyorum. Bu süreçte biraz da kitap okudum bunlardan en beğendiklerimi sizinle de paylaşmak istedim..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Beyaz Zambaklar Ülkesinde&lt;/li&gt;
  &lt;li&gt;İnsanın Anlam Arayışı&lt;/li&gt;
  &lt;li&gt;Semaver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nostalji sever bir insan olduğumdan dolayı yaklaşık 2016 yılının içerisinden itibaren geliştirmek istediğim bir proje vardı bunu ve daha yeni bunu hayata gerçirdim.  Amacı nostaljik  değerde ya da kültür sanat alanında içerik oluşturmak isteyen insanları bir araya getiren bir sosyal platform diyebilirim. Burada çok başarılı olmasa da UI/UX, Front-End ve Back-End developer olarak uçtan uca yer aldım. Programlama dili olarak Python kullandım, Veritabanı olarak Mysql, ön yüzde Bootstrap, Google Material Framework kullandım. Eğer ziyaret etmek isterseniz http://www.eskimeyeneskiler.com üzerinden ziyaret edebilirsiniz.&lt;/p&gt;

&lt;p&gt;Genel olarak bu yazımda kısaca değindiğim dağınık konular oldu, eğer okumaya değer bulup sonuna geldiyseniz teşekkür ederim. Anlatım ve kelime hatalarım için lütfen geri dönüş sağlayabilirseniz mutlu olurum.&lt;/p&gt;

&lt;p&gt;İyi günler!
Akın.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/mtapbslpYIk&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Merhabalar, aylar ayları devirdi ve hiç bir blog yazısı yazamadım. Kafamda bir çok konuyla ilgili yazı yazmak vardı hepsini parça parça kenara köşeye kaydettim, bunları hayata geçirmeye yeni yeni başladım aslında. Öncelikle ülkemizin ihtiyacı olan sıcaklığı ve sevgiyi ve barış’ı neden kaybettiği sorusu ara sıra aklıma gelmekte ve bunda da en büyük payın popüler kültürün insanlara dayattığı tüketim olgusunun, insanları mutsuzluğa itmeye sebep olarak görüyorum. Her kesimden insanın bu kadar birbirinden nefret edebilmesini ya da bir konuda verdiği emeğin hiçe sayılıp o emek sonucunu nasıl en vurucu biçimde eleştirebilirim sorusunun şeytani zihinlerde oluşmasını anlayamıyorum. Bu tür insanlara yabancı lugatta hater(nefret eden kimseler) deniliyor ve twitter’da bunlara bolca rastlamak mümkün, her konu hakkında sadece trollük kovalamak, eleştirmek ya da her şeyi mizaha vurmak bunları hepsini beğeni kazanma kaygısı ve popüler olmak uğruna yapmaları gerçekten acı bir durum diye düşünüyorum.</summary></entry><entry><title type="html">Doğum günün kutlu olsun Barış Manço</title><link href="http://www.akinabdullahoglu.com/Dogum-gunun-kutlu-olsun-baris-manco/" rel="alternate" type="text/html" title="Doğum günün kutlu olsun Barış Manço" /><published>2019-01-02T03:30:22+03:00</published><updated>2019-01-02T03:30:22+03:00</updated><id>http://www.akinabdullahoglu.com/Dogum-gunun-kutlu-olsun-baris-manco</id><content type="html" xml:base="http://www.akinabdullahoglu.com/Dogum-gunun-kutlu-olsun-baris-manco/">&lt;hr /&gt;
&lt;p&gt;“Bir kişinin adı en son ne zaman telaffuz edilirse o gün ölmüş oluyor insan. Yani fizik olarak bu dünyayı terk etmek çok da önemli bir şey değil. Nasıl olsa günün birinde hepimiz terk edeceğimiz için ve milyarlar terk ettiği için… Ama adınız anılmadığı gün gerçek anlamda bu dünyayı terk etmiş oluyorsunuz.” demiştin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.akinabdullahoglu.com/Images/26167642_10156072748872052_2002096257303538440_n.jpg&quot; alt=&quot;Barış Manço Resmi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sen bir modern halk ozanı olarak, sanatçı kelimesinin karşılığını fazlasıyla veren güzel insan olarak, hep bizim şarkılarımızı söyledin. Bizdeki yerin şarkılarınla, sözlerinle ve hikayelerinle unutulmadan devam edecek güzel insan..&lt;/p&gt;

&lt;p&gt;Bilinenler ve bilinmeyenlerden birkaç parça ile..&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Baykoca Destanı&lt;/strong&gt;
https://www.youtube.com/watch?v=P7QAH2OhoA0&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Gamzedeyim Deva Bulmam&lt;/strong&gt; : 
https://www.youtube.com/watch?v=t-lIFKo-RoI&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Sarı Çizmeli Mehmet Ağa&lt;/strong&gt; : 
https://www.youtube.com/watch?v=Dlp0FdBYubw&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Eğri Eğri Doğru Doğru&lt;/strong&gt; :
https://www.youtube.com/watch?v=VWxwMs4T7fc
***&lt;/p&gt;

&lt;p&gt;Unutmadan “İnsanın öğrenmesi gereken ilk dil, tatlı dildir.” :)&lt;/p&gt;

&lt;p&gt;Saygı, sevgi ve rahmetle..&lt;/p&gt;</content><author><name></name></author><summary type="html">“Bir kişinin adı en son ne zaman telaffuz edilirse o gün ölmüş oluyor insan. Yani fizik olarak bu dünyayı terk etmek çok da önemli bir şey değil. Nasıl olsa günün birinde hepimiz terk edeceğimiz için ve milyarlar terk ettiği için… Ama adınız anılmadığı gün gerçek anlamda bu dünyayı terk etmiş oluyorsunuz.” demiştin.</summary></entry><entry><title type="html">Python Django Üzerinde Redis Cache Nasıl Yapılır?</title><link href="http://www.akinabdullahoglu.com/Python-Django-uzerinde-Redis-Cache-Nasil-Yapilir/" rel="alternate" type="text/html" title="Python Django Üzerinde Redis Cache Nasıl Yapılır?" /><published>2017-11-14T05:52:41+03:00</published><updated>2017-11-14T05:52:41+03:00</updated><id>http://www.akinabdullahoglu.com/Python-Django-uzerinde-Redis-Cache-Nasil-Yapilir?%20</id><content type="html" xml:base="http://www.akinabdullahoglu.com/Python-Django-uzerinde-Redis-Cache-Nasil-Yapilir/">&lt;p&gt;Merhaba arkadaşlar, yakın zamanlarda &lt;strong&gt;Python&lt;/strong&gt; programlama dilini kullanarak bir projeye başladım ve &lt;strong&gt;Django framework&lt;/strong&gt; kullanma deneyimi elde ettim. Bu yazımda &lt;strong&gt;Django&lt;/strong&gt; uygulaması üzerinde &lt;strong&gt;Redis&lt;/strong&gt; ile nasıl haberleşebiliriz bu konuyu aktarmaya çalışacağım.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/Images/django-redis-cache.png&quot; alt=&quot;Redis logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bir önceki yazımda &lt;strong&gt;OS-X&lt;/strong&gt; üzerinde &lt;strong&gt;Redis&lt;/strong&gt; kurulumunu aktarmıştım, bu yazımda yine OS-X üzerinden ilerleyeceğim, eğer kurulu değil ise onu okuyarak başlangıç yapabilirsiniz.&lt;/p&gt;

&lt;p&gt;Eğer zaten kurulu ise konsol da &lt;strong&gt;redis-cli&lt;/strong&gt; &lt;strong&gt;ping&lt;/strong&gt; komutunu yazıp &lt;strong&gt;PONG&lt;/strong&gt; döndüğünü görürseniz devam edebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tutorial.djangogirls.org/tr/installation/#bir-virtualenv-kurun-ve-djangoyu-y%C3%BCkleyin&quot;&gt;Virtual Enviroment nedir?&lt;/a&gt;&lt;/strong&gt; bu kaynaktan okuyarak anlayabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Temel gereksinimler:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Redis&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Virtual Enviroment (Zorunlu olmasa da kurulu olması iyi olur.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Projenizin de oluşturulduğunu düşünürsek &lt;strong&gt;virtualenv&lt;/strong&gt; ile  devam edebiliriz.&lt;/p&gt;

&lt;p&gt;Aşağıdaki komutta bulunan &lt;strong&gt;eskvenv&lt;/strong&gt; yerine sizin verdiğiniz &lt;strong&gt;enviroment&lt;/strong&gt; isminiz olacak.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source eskvenv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Proje kaynak klasörünüzde yukarıdaki komutu çalıştırın. Çalıştırdıktan sonra aşağıdaki gibi bir dönüş olacaktır.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(eskvenv) ➜
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sonrasında aşağıdaki komutu kullanarak, python django için geliştirilen, django redis ekletisini kuracağız.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pip install django-redis-cache 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bu komutu yazdıktan sonra redis cache eklentisi eskvenv  bağımlılığında bir kurulum yapacaktır geneli etkilemeyecektir. Kurulum bittikten sonra, projemizde bulunan settings.py dosyamıza aşağıdaki tanımı yapalım.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CACHES = {
&quot;default&quot;: {
    &quot;BACKEND&quot;: &quot;django_redis.cache.RedisCache&quot;,
    &quot;LOCATION&quot;: &quot;redis://127.0.0.1:6379&quot;,
    &quot;OPTIONS&quot;: {
        &quot;CLIENT_CLASS&quot;: &quot;django_redis.client.DefaultClient&quot;,
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;LOCATION&lt;/strong&gt; özelliğindeki sunucu adresi farklılık gösterebilir bunun için konsolda aşağıda ki komutu yazalım.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Konsolda bizim geçerli olan redis sunucu konsolumuza geçiş yapacaktır. Birden fazla client varsa aşağıdaki komut işe yarayabilir.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis-cli client list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;CACHES&lt;/strong&gt; tanımını yaptıktan sonra kod kısmında nasıl kullanacağımıza geçelim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cacheUtils.py&lt;/strong&gt; dosyamızın olduğunu varsayarsak aşağıda ki gibi bir aşagıdaki fonksyinlar basit olarak işimizi görecektir.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--&amp;gt; cache sınıfını import edelim.
from django.core.cache import cache

Key-Value bir cache tutmak istiyorsak direk set komutunu kullanabiliriz.
cache.set('cache-key', 'bu bir cache key değeridir..')

Key-Value tanımlanan değeri redis üzerinden almak için
cache.get('cache-key') # eğer cache var ise değerini getirecektir.

Birden fazla değer set etmek için:
cache.set_many({'yellow': 250, 'blue': 350, 'white': 450})

Birden fazla değeri getirmek için:
cache.get_many(['blue', 'yellow', 'white']) 
# dönecek değerler {'blue': 350, 'yellow': 250, 'white': 450}

Complex tipleri tutmak için:
cache.set('cache-key', {
    'string'    : 'elma bir meyvedir.',
    'int'       : 9876,
    'list'      : [32, 23, 35, 65],
    'dict'      : {'Y': 9, 'X' : 5, 'Z':98},
    'tuple'     : (9, 8, 7, 6),
   
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Kısaca size Python ve Django kullanarak Redis üzerine veri yazmayı ve okumayı basit olarak aktarmaya çalıştım.&lt;/p&gt;

&lt;p&gt;Umarım faydalı bir içerik olmuştur.&lt;/p&gt;

&lt;p&gt;Sevgilerle.
Akın.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/XfAW4KpyWQo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Merhaba arkadaşlar, yakın zamanlarda Python programlama dilini kullanarak bir projeye başladım ve Django framework kullanma deneyimi elde ettim. Bu yazımda Django uygulaması üzerinde Redis ile nasıl haberleşebiliriz bu konuyu aktarmaya çalışacağım.</summary></entry><entry><title type="html">OS-X Üzerinde Redis Server Kurulumu</title><link href="http://www.akinabdullahoglu.com/OS-X-Uzerinde-Redis-Server-Kurulumu/" rel="alternate" type="text/html" title="OS-X Üzerinde Redis Server Kurulumu" /><published>2017-11-09T04:19:41+03:00</published><updated>2017-11-09T04:19:41+03:00</updated><id>http://www.akinabdullahoglu.com/%20OS-X-Uzerinde-Redis-Server-Kurulumu</id><content type="html" xml:base="http://www.akinabdullahoglu.com/OS-X-Uzerinde-Redis-Server-Kurulumu/">&lt;p&gt;Merhaba arkadaşlar, eğer bu konuya ulaştıysanız redis’in az çok ne yaptığı hakkında bilginiz vardır diye düşünüyorum. Redis, Memcache, Hazelcast genel olarak data cache sunucusu olarak kullanılan teknolojilerdir. Hepsinin birbirine göre birçok farkı vardır size en uygun olanını probleminize göre seçeceğiniz için bu kısmı size bırakıyorum. Biz &lt;strong&gt;OS X&lt;/strong&gt; üzerinde &lt;strong&gt;package manager&lt;/strong&gt; olarak kullanılan &lt;strong&gt;homebrew&lt;/strong&gt; ile sistemimize &lt;strong&gt;Redis Server&lt;/strong&gt; kurulumunu gerçekleştireceğiz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1200px-Redis_Logo.svg.png&quot; style=&quot;width:50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Homebrew&lt;/strong&gt; kurmak için ruby gereksinimi vardır. Öncelikle &lt;strong&gt;Homebrew&lt;/strong&gt; yok ise https://brew.sh/ üzerinden kurulumunu gerçekleştirebilirsiniz.&lt;/p&gt;

&lt;p&gt;Homebrew kurulumu tamamlandıktan sonra terminal uygulamasını açıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu komutu yazıp çalıştırdıktan sonra &lt;strong&gt;homebrew&lt;/strong&gt; bize &lt;strong&gt;redis agent&lt;/strong&gt; kurulumunu yapacaktır. Bir hata ile karşılaşılmadığı müddetçe kurulum tamamlanmış olacaktır, fakat biz yine de brew list komutunu yazarak gelen paketler arasında redis’in olduğunu kontrol edelim.&lt;/p&gt;

&lt;p&gt;Kurulum sonrasında birkaç ufak ayar yapalım;&lt;/p&gt;

&lt;p&gt;Başlangıçta redis açılsın istiyorsak.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Brew aracılığı ile Redis sunucumuzu başlatalım.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ brew services start redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Konfigürasyon dosyası kullanarak Redis’i başlatmak istiyorsak;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ redis-server /usr/local/etc/redis.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Redis sunucumuzu durdurmak istiyorsak;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew services stop redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Redis’in konfigürasyon dosyasının konumu;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/etc/redis.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Redis’i sistemden tamamen kaldırmak için;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew uninstall redis
$ rm ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Brew üzerinden redis paket detayını almak için;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew info redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Redis sunucumuzun başarılı bir şekilde çalıştığını test edelim;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis-cli ping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;terminal’e &lt;strong&gt;PONG&lt;/strong&gt; mesajı dönüyorsa sunucumuz başarıyla kurulmuş demektir.&lt;/p&gt;

&lt;p&gt;Umarım faydalı bir yazı olmuştur.&lt;/p&gt;

&lt;p&gt;Sevgilerle&lt;/p&gt;

&lt;p&gt;Akın.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/al7Vt5LLvZY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Merhaba arkadaşlar, eğer bu konuya ulaştıysanız redis’in az çok ne yaptığı hakkında bilginiz vardır diye düşünüyorum. Redis, Memcache, Hazelcast genel olarak data cache sunucusu olarak kullanılan teknolojilerdir. Hepsinin birbirine göre birçok farkı vardır size en uygun olanını probleminize göre seçeceğiniz için bu kısmı size bırakıyorum. Biz OS X üzerinde package manager olarak kullanılan homebrew ile sistemimize Redis Server kurulumunu gerçekleştireceğiz.</summary></entry><entry><title type="html">Blog Sayfam Github’a Emanet</title><link href="http://www.akinabdullahoglu.com/Blog-Sayfam-Github-a-Emanet/" rel="alternate" type="text/html" title="Blog Sayfam Github'a Emanet" /><published>2017-10-13T17:19:41+03:00</published><updated>2017-10-13T17:19:41+03:00</updated><id>http://www.akinabdullahoglu.com/Blog-Sayfam-Github-a-Emanet</id><content type="html" xml:base="http://www.akinabdullahoglu.com/Blog-Sayfam-Github-a-Emanet/">&lt;p&gt;&lt;img src=&quot;https://talk.jekyllrb.com/uploads/jekyllrb/original/1X/4f9bd5334246d33651e846aed812280fbff586ba.png&quot; width=&quot;400&quot; height=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Merhaba arkadaşlar, yaklaşık 1 yıl oldu makale yazamadım. Son 1 yıl aşırı yoğun geçti, hatta overdoose olarak tanımlanabilir. Blog içerik yönetimi olarak uzun zamandır wordpress kullanıyordum, fakat bir yerden sonra wordpress’in blog için fazla yüklü olduğunu düşündüm. Çoğu &lt;strong&gt;nerd&lt;/strong&gt; insanın blog’larını github üzerinde tuttuğunu biliyordum, ben de yaşadığım birkaç &lt;strong&gt;migration&lt;/strong&gt; probleminden sonra &lt;strong&gt;Jekyll&lt;/strong&gt; sistemine geçerek blog sayfalarımı &lt;strong&gt;markdown&lt;/strong&gt; olarak ekledim. Blog yazılarım artık &lt;strong&gt;github&lt;/strong&gt; üzerinde public şekilde tutuluyor, yazılarım &lt;strong&gt;.md&lt;/strong&gt; uzantıda &lt;strong&gt;markdown&lt;/strong&gt; formatında hazırlıyorum ve sadece jekyll ile ruby tabanlı derleme yaparak .html uzantısında statik sayfalarımı kendi &lt;strong&gt;github&lt;/strong&gt; hesabıma aktarıp &lt;strong&gt;github pages&lt;/strong&gt; ile host edebiliyorum. Bu bana aşırı rahatlık ve özgürlük sağladı, hem maliyet olarak hemde hosting tarafındaki karmaşalardan uzak, hatalardan uzak bir ekosistem oluştu. Sadece yazı yazdığımı düşünürsek jekyll gerçekten bu iş biçilmiş kaftan!&lt;/p&gt;

&lt;p&gt;Teknik detayına geçecek olursak, ben ubuntu ve mac-os üzerinde kullanım sağladım. Windows için işler biraz daha detaylı ilerliyor, ruby vs. yüklemek ve path ayarları yapmak lazım. En iyisi bir Virtual Machine oluşturup, bir linux yazılımı üzerinde Jekyll ile ilerlemek çok rahatlatıcı olacaktır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jekyll Static Site Generator&lt;/strong&gt;
https://jekyllrb.com/&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wordpress to Jekyll&lt;/strong&gt; export yapmak için olan eklendi.
https://tr.wordpress.org/plugins/jekyll-exporter/&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github Pages&lt;/strong&gt;
https://pages.github.com/&lt;/p&gt;

&lt;p&gt;Yeni yazılarda görüşmek dileğiyle.&lt;/p&gt;

&lt;iframe width=&quot;450&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/z33tH-JdPDg&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Iskalanmış Hayaller</title><link href="http://www.akinabdullahoglu.com/iskalanmis-hayaller/" rel="alternate" type="text/html" title="Iskalanmış Hayaller" /><published>2017-02-08T21:35:41+03:00</published><updated>2017-02-08T21:35:41+03:00</updated><id>http://www.akinabdullahoglu.com/iskalanmis-hayaller</id><content type="html" xml:base="http://www.akinabdullahoglu.com/iskalanmis-hayaller/">&lt;p&gt;Olur ya bir gün geçer bu zamanlar, biz bunlara da katlanırız..
Uzaklara dalsak da derin derin, arayışta olsak da hep bir şeyleri..
Her geçen gün daha da tüketiyor, daha da umutsuzlaştırıyor..
Umut neydi sahi, her yıkılıştan, her dibe vuruştan sonra kalkacağımızı bilmek miydi? Yoksa aniden ansızın gelen güzel bir hayat cilvesi miydi?
Ya dibe vurup bir gün kalkamazsak, ya hepten yıkılıp kalkamayacak olursak..
Ama hayır böyle düşünmeyeceğim, bunca umutsuzluğa rağmen biz yine şarkılar söyleyip şiirler okuyacağız, bugün kablosuz olarak bağladığımız umutlarımızı belki bir gün tekrar gözlerimize, yüz yüze bakarak yeniden yeşerteceğiz..&lt;/p&gt;

&lt;p&gt;Bir de çay içeceğiz, hep birlikte umutla, güneşli günlerde..&lt;/p&gt;

&lt;p&gt;A.A.&lt;/p&gt;

&lt;p&gt;08/02/2017 23:27 Aklımdan geçenler..&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2oICpKQl6mE&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Olur ya bir gün geçer bu zamanlar, biz bunlara da katlanırız.. Uzaklara dalsak da derin derin, arayışta olsak da hep bir şeyleri.. Her geçen gün daha da tüketiyor, daha da umutsuzlaştırıyor.. Umut neydi sahi, her yıkılıştan, her dibe vuruştan sonra kalkacağımızı bilmek miydi? Yoksa aniden ansızın gelen güzel bir hayat cilvesi miydi? Ya dibe vurup bir gün kalkamazsak, ya hepten yıkılıp kalkamayacak olursak.. Ama hayır böyle düşünmeyeceğim, bunca umutsuzluğa rağmen biz yine şarkılar söyleyip şiirler okuyacağız, bugün kablosuz olarak bağladığımız umutlarımızı belki bir gün tekrar gözlerimize, yüz yüze bakarak yeniden yeşerteceğiz..</summary></entry><entry><title type="html">İyi ki Doğdun Barış Manço!</title><link href="http://www.akinabdullahoglu.com/iyi-ki-dogdun-baris-manco/" rel="alternate" type="text/html" title="İyi ki Doğdun Barış Manço!" /><published>2017-01-02T21:35:41+03:00</published><updated>2017-01-02T21:35:41+03:00</updated><id>http://www.akinabdullahoglu.com/iyi-ki-dogdun-baris-manco</id><content type="html" xml:base="http://www.akinabdullahoglu.com/iyi-ki-dogdun-baris-manco/">&lt;p&gt;&lt;img src=&quot;http://www.akinabdullahoglu.com/Images/2017/01/1188826_3500ab27ba42b8f526331bd6c1193c30-150x150.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ülkemiz ve Evrensel çevrede fazlasıyla yer bırakmış, &lt;strong&gt;Türk Rock **tarihinin yapıtaşlarını oluşturmuş, her dönem herkeste bir iz bırakmış. Genel olarak tüm kesimlerin dinlemese bile saygı duyduğu, büyük bir sanatçı, gezip görüp bizlere anlattığı yerler ile modern evliya çelebi etiketini tamamen hak eden, ana diline yakın seviyede birden fazla dil bilen ve o diller üzerinde müzik üretmeyi başarmış büyük bir insan. Ben kendisini yaşım yettiğince televizyon yada kaset olarak çok az dinleyip yada görüp sonradan yaptığım araştırma ve ilgiyle kendisinin hayatı hakkında fazlasıyla bilgi sahibi olduğum bir kişi. Belki hiç tanımayan hiç dinlemeyen hiç görmeyen bir kişi bu yorum hakkında bu kadarı abartı diyebilir ama eminim ki dinleyen, tanıyan bir kişiye göre belki de bu hayatının çok ufak bir kısmının özetidir belki de. Bugün 74. yaş günü aramızdan ayrılışı ise neredeyse 17 yıl oldu, o hayatı boyunca bir şeyler üretme, ülkemizi evrensel alanda tanıtma gibi kendi kendine misyonlar yükledi ve başarıyla hedeflerine ulaşarak ülkemiz adına bir gurur kaynağı oldu. Ben onu son dönemlerde popüler olan şarkılarıyla değil de gerçekten gönülden sevenlerin eminim bildiği, **Halil İbrahim Sofrası&lt;/strong&gt;, &lt;strong&gt;Aynalı Kemer&lt;/strong&gt;, &lt;strong&gt;Little’Darlin&lt;/strong&gt;, &lt;strong&gt;Nick The Chopper&lt;/strong&gt;, &lt;strong&gt;Ne Ola Yar Ola&lt;/strong&gt; ve ismi yazılacak nice derin anlamlar, öğütler taşıyan şarkılarıyla sevdim. Kimi zaman Nick The Chopper parçası ile bir oduncunun hikayesinin hikayesini ingilizce olarak anlattı, kimi zaman Nane Limon Kabuğu ile sağlığın sıhhatin önemini vurguladı, kimi zaman Ahmet Beyin Ceketi‘nin anlamını bize öğütledi, kimi zaman Süleyman ile görgüsüzlüğün ne kadar acı olduğunu anlattı, kimi zaman Anahtar parçası ile paranın insanı ne kadar satın aldığını, Halil İbrahim Sofrası ile alın terinin, helal kazancın önemine dem vurdu ve 2023 parçası ile de geleceği gördü belki de gelecekten beklediği, istediği, umutlarını aktardı.. Bizler bu acı günlerde onun şarkılarıyla öğütleriyle moral bulmaya çalışıyoruz ve hala anlıyoruz ki bu  seviyeye gelebilmek ne denli zor ne denli emek isteyen bir işmiş, içinde sevgi olmayan hiç bir iş asla kimse tarafından önemsenmiyormuş.  İyi ki doğdun Barış abi, iyi ki bu hayat katarının bu çizgisinde seni tanıdım, dinledim ve dinlemeye örnek almaya devam edeceğim.  Bu yazıyı okuyan, sabreden ve sabrın sonuna geldiğinde selamet olmasını dilediğim bir kaç Barış Manço videosu paylaşacağım.&lt;/p&gt;

&lt;p&gt;Barış Manço hayatını çiziyor&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/SYffTCXtsXQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Para Nedir? Röportajından&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/G7tCGTcL02M&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Son olarak Halil İbrahim Sofrası klibiyle..&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ho87nPGKXnQ&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;img src=&quot;http://www.akinabdullahoglu.com/Images/2017/01/C1JvprbXAAA18Nw-300x206.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Okuduğunuz için teşekkürler.&lt;/p&gt;

&lt;p&gt;Sevgilerle…&lt;/p&gt;

&lt;p&gt;Akın&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Abstract Class ve Interface Arasındaki Fark?</title><link href="http://www.akinabdullahoglu.com/Abstract-Class-ve-Interface-Nedir/" rel="alternate" type="text/html" title="Abstract Class ve Interface Arasındaki Fark?" /><published>2016-10-22T17:35:41+03:00</published><updated>2016-10-22T17:35:41+03:00</updated><id>http://www.akinabdullahoglu.com/Abstract%20Class%20ve%20Interface%20Nedir</id><content type="html" xml:base="http://www.akinabdullahoglu.com/Abstract-Class-ve-Interface-Nedir/">&lt;p&gt;Merhaba arkadaşlar, bugün sizlerle paylaşmak istediğim konu C# programlama dili içerisinde bulunan &lt;strong&gt;Class&lt;/strong&gt; ve &lt;strong&gt;Interface&lt;/strong&gt; yapıları ve aralarındaki farklar hakkında olacak. Öncelikle &lt;strong&gt;Class&lt;/strong&gt;(Sınıf) nedir bu konuya değinelim, Class içerisinde metotlar, değişkenler hatta yine sınıf tanımlarının yapılabildiği Object Oriented Programlama dilinin temelini oluşturan bir yapıdır. Aşağıdaki örnekte bir Users adında bir sınıfımız ve içerisinde &lt;strong&gt;getter&lt;/strong&gt; ve &lt;strong&gt;setter&lt;/strong&gt; tanımlı olan iki public değişkenimiz var.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userEmail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Class&lt;/strong&gt; yapısı hakkında kısa bir açıklama yaptıktan sonra şimdi &lt;strong&gt;Interface&lt;/strong&gt;(Arayüz) yapısına gelelim, Interface’de Class yapısına benzer bir yapıdadır, en kritik farklarından birisi içerisine metodun sadece tanımı eklenir burası biraz kafa karıştırıcı olabilir ama örnek ile anlaşılacağını düşünüyorum.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt; 

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUsersByName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUsersByEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUsersById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıda ki örnekte görüldüğü gibi &lt;strong&gt;Interface&lt;/strong&gt; tanımı &lt;strong&gt;Class&lt;/strong&gt; tanımına benziyor fakat en önemli özelliklerinden birisi sadece metod tanımlarını içermeleridir. Peki diyeceksiniz ki neden &lt;strong&gt;interface&lt;/strong&gt; kullanmamız gerekiyor? bu sorunun cevabını ancak fazlaca kod yazarak, deneyerek tecrübe ederek verebilirsiniz. Bir proje içerisinde kod yapısı arttıkça ve aynı kodlar kendini tekrarlamaya başlayınca çeşitli çözümler aranır, işte bu yapılar da dili işlevsel kullanmak için bir nevi araçtır. &lt;strong&gt;Interface&lt;/strong&gt; kullanmak geliştirme düzenli sağlar, &lt;strong&gt;Domain&lt;/strong&gt;(Proje iş yapısı) yapısına göre tasarlandıktan sonra ve metod tanımlarını &lt;strong&gt;implement&lt;/strong&gt; edildiği &lt;strong&gt;Class&lt;/strong&gt; içerisinde zorunlu kılar, bu da bir zorunluluk olduğundan daha düzenli bir geliştirmeye zorlar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Genel olarak birbirlerine göre farkları:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;*Interface içerisinde metod tanımlarını barındırırken, Class içerisinde metodun kendisi vardır.&lt;/p&gt;

&lt;p&gt;*Abstract class base class olma özelliği taşır ve instance edilemez. &lt;a href=&quot;http://www.akinabdullahoglu.com/Images/2016/09/abstract-class-instance-error.png&quot;&gt;Bknz&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;*Abstract olmayan class instance edilebilir ve implement de edilebilir.&lt;/p&gt;

&lt;p&gt;*Abstract class bir defa implement edilir fakat bir class’a birden fazla Interface implement edilebilir. &lt;a href=&quot;http://www.akinabdullahoglu.com/Images/2016/09/abstract-class-birden-fazla-implement-edilemez.png&quot;&gt;Bknz-1&lt;/a&gt; , &lt;a href=&quot;http://www.akinabdullahoglu.com/Images/2016/09/interface-birden-fazla-implement-edilebilir.png&quot;&gt;Bknz-2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*Interface içerisine tanımlanan metod implement edildiği Class içerisinde tanımlanmak zorundadır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Örnek&lt;/strong&gt; :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt; 
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IUserLogs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki örnekte &lt;strong&gt;IUser&lt;/strong&gt; ve &lt;strong&gt;IUserLogs&lt;/strong&gt; interface(arayüzleri) UserService class’ına &lt;strong&gt;implement&lt;/strong&gt; edilmiştir. Interface tanımlarken ilk harf olarak &lt;strong&gt;I&lt;/strong&gt; harfini kod zorunlu kılmaz fakat geliştirici kuralları açısından doğru kullanım bu şekildedir. &lt;strong&gt;Interface ile ilgili basit bir örnek :&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IUser&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUserEmailById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IUserLogs&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUserEntryCountById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IUserLogs&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DBEntities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DBEntities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUserEmailById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tblUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EmailAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUserEntryCountById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tblUserPosts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Biraz kafa karıştırıcı olabilir fakat kendiniz pratikler ve örnekler yaparak daha anlamlı yapılar ortaya çıkarabilirsiniz. Bir de vereceğim kavramları da araştırmanızı rica ediyorum. &lt;a href=&quot;https://en.wikipedia.org/wiki/KISS_principle&quot;&gt;&lt;strong&gt;K.I.S.S.(Keep İt Simple Stupid)&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;strong&gt;Single Responsebility&lt;/strong&gt;&lt;/a&gt;, &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;Seperation of Concerns&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Inversion_of_control&quot;&gt;Inversion of Control&lt;/a&gt;&lt;/strong&gt; bu kavramları araştırdıkça ve okudukça kafanıza daha iyi şeyler oturacağına eminim. Sevgilerle.&lt;/p&gt;

&lt;iframe src=&quot;https://www.youtube.com/embed/d27gTrPPAyk&quot; allowfullscreen=&quot;allowfullscreen&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Merhaba arkadaşlar, bugün sizlerle paylaşmak istediğim konu C# programlama dili içerisinde bulunan Class ve Interface yapıları ve aralarındaki farklar hakkında olacak. Öncelikle Class(Sınıf) nedir bu konuya değinelim, Class içerisinde metotlar, değişkenler hatta yine sınıf tanımlarının yapılabildiği Object Oriented Programlama dilinin temelini oluşturan bir yapıdır. Aşağıdaki örnekte bir Users adında bir sınıfımız ve içerisinde getter ve setter tanımlı olan iki public değişkenimiz var.</summary></entry><entry><title type="html">Gitignore Nasıl Oluşturulur ve Kullanılır?</title><link href="http://www.akinabdullahoglu.com/Gitignore-Nasil-Olusturulur-ve-Kullanilir/" rel="alternate" type="text/html" title="Gitignore Nasıl Oluşturulur ve Kullanılır?" /><published>2016-10-22T17:35:41+03:00</published><updated>2016-10-22T17:35:41+03:00</updated><id>http://www.akinabdullahoglu.com/Gitignore%20Nasil%20Olusturulur%20ve%20Kullanilir</id><content type="html" xml:base="http://www.akinabdullahoglu.com/Gitignore-Nasil-Olusturulur-ve-Kullanilir/">&lt;p&gt;Merhaba arkadaşlar, .git ile ilgili yazılarımın devamı olarak bu yazımda yine birlikteyiz.&lt;/p&gt;

&lt;p&gt;Öncelikle Git conflict problemi ile ilgili 2 önceki yazımda bir örnek vermiştim. Öncelikle conflict nedir onu tanımlayalım. Kendi lokal repomuz ile sunucuya aktardığımız repomuzun ikisinin aynı anda farklı değişikliklere gebe kalması durumunda oluşan dosya çakışmaları, eksik dosyalar ve buna benzer durumlar conflict hatasına neden olur. Bu tabii ki kullanım aksiyonuna göre değişkenlik gösterebilmektedir, ekip olarak kullanımlarda pull yapılmadan gönderilme durumları ve benzer durumlar conflict problemine yol açar. Bu durum da bizim projenin hataya düşmesine, eksik dosya oluşmasına ve buna benzer birçok problemin çıkmasına sebebiyet vermektedir. Genellikle Derlenen programlama dillerinde her build işlemi sonrasında geçici dosyalar oluşmaktadır. Örnek verecek olursak .NET Platformu üzerinde geliştirme yapanlar bilirler kod her derlendiğinde temporary yani geçici dosyalar oluşur ve bu dosyalar hep farklı isimlerde tutulmaktadır. Böyle bir durum oluşması da bizim git server üzerinde tutulan dosya yapımızda bozukluklara karışıklıklara yol açabilir. İşte bu yüzden .git server diğer source-control sistemlerinde olduğu gibi bir filtreleme mekanizması olan .gitignore dosyasını tanımlamıştır. Bu dosya içerisine projenin mimari yapısını etkilemeyecek (geçici dosyalar, sisteme bağımlı olmayan dosyalar, gönderilmesine gerek olmayan dizinler vb.) klasörler ya da dosyalar eklenerek filtreleme yapılır ve oluşturduğumuz repository altına bu dosyaların gitmesi engellenir. Bu da temiz bir repo yapısını ve conflict durumlarını en aza indirir. Sağlıklı bir şekilde push ve pull işlemleri yapıyorsak bir problem ile karşılaşma durumumuz çok aza indirgenmiş olacaktır.&lt;/p&gt;

&lt;p&gt;Ben sizlere kendimin de kullandığı bir servisi önereceğim.
&lt;strong&gt;https://www.gitignore.io/&lt;/strong&gt; linkinden servisi açtıktan sonra örnek olarak &lt;strong&gt;VisualStudio&lt;/strong&gt; girelim.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/Images/2016/04/gitignore.io_.gif&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gördüğünüz gibi açılan pencrede aşağıdaki gibi bir kod yapısı çıkıyor.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    # Created by https://www.gitignore.io/api/visualstudio
 
### VisualStudio ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
 
# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
 
# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs
 
# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
 
# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/
 
# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
 
# NUNIT
*.VisualState.xml
TestResult.xml
 
# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c
 
# DNX
project.lock.json
artifacts/
 
*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
 
# Chutzpah Test files
_Chutzpah*
 
# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
 
# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap
 
# TFS 2012 Local Workspace
$tf/
 
# Guidance Automation Toolkit
*.gpState
 
# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
 
# JustCode is a .NET coding add-in
.JustCode
 
# TeamCity is a build add-in
_TeamCity*
 
# DotCover is a Code Coverage Tool
*.dotCover
 
# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*
 
# MightyMoose
*.mm.*
AutoTest.Net/
 
# Web workbench (sass)
.sass-cache/
 
# Installshield output folder
[Ee]xpress/
 
# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html
 
# Click-Once directory
publish/
 
# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj
 
# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/
 
# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets
 
# Microsoft Azure Build Output
csx/
*.build.csdef
 
# Microsoft Azure Emulator
ecf/
rcf/
 
# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
 
# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/
 
# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs
 
# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/
 
# RIA/Silverlight projects
Generated_Code/
 
# Backup &amp;amp; report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git &amp;lt;img draggable=&quot;false&quot; class=&quot;emoji&quot; alt=&quot;&quot; src=&quot;https://s.w.org/images/core/emoji/2/svg/1f609.svg&quot;&amp;gt;
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
 
# SQL Server files
*.mdf
*.ldf
 
# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
 
# Microsoft Fakes
FakesAssemblies/
 
# GhostDoc plugin setting file
*.GhostDoc.xml
 
# Node.js Tools for Visual Studio
.ntvs_analysis.dat
 
# Visual Studio 6 build log
*.plg
 
# Visual Studio 6 workspace options file
*.opt
 
# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions
 
# Paket dependency manager
.paket/paket.exe
paket-files/
 
# FAKE - F# Make
.fake/
 
# JetBrains Rider
.idea/
*.sln.iml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Şimdi sıra geldi bu dosyayı repository’mize tanımlamaya. oluşan kodumuzu kopyalıyoruz ve projemizin ana dizininde yeni bir metin belgesi oluşturuyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dikkat&lt;/strong&gt; : Windows kullanıcıları dosya uzantısı gizlilik ayarını değiştirmeleri gerekebilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;bakınız :&lt;/strong&gt; http://windows.microsoft.com/tr-tr/windows/show-hide-file-name-extensions#show-hide-file-name-extensions=windows-7&lt;/p&gt;

&lt;p&gt;Aşağıdaki .gif resim üzerinden işlemi hareketli şekilde görebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/Images/2016/04/create-gitignore.gif&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gördüğünüz gibi .gitignore dosyamızı oluşturduk ve artık içerisindeki örnekler üzerinden kendimize göre düzenlemeler ve değişiklikler yapabiliriz. Bundan sonra ki yaptığımız commit işlemlerinde bu kuralları baz alacak ve sunucuda eşleşmeyen dosyalar çıkarılacaktır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dipnot&lt;/strong&gt; : Github ve Bitbucket baz alınarak anlatım yazılmıştır iki platformda da kullanılır.&lt;/p&gt;

&lt;p&gt;Umarım açıklayıcı bir yazı olmuştur.&lt;/p&gt;

&lt;p&gt;Hepinize sevgiler yeni yazılarla görüşmek dileğiyle..&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/piemW_QYbO0?ecver=1&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Merhaba arkadaşlar, .git ile ilgili yazılarımın devamı olarak bu yazımda yine birlikteyiz.</summary></entry><entry><title type="html">Git Repository üzerinden proje nasıl çekilir?</title><link href="http://www.akinabdullahoglu.com/Git-Repository-uzerinden-proje-nasil-cekilir/" rel="alternate" type="text/html" title="Git Repository üzerinden proje nasıl çekilir?" /><published>2016-05-04T17:35:41+03:00</published><updated>2016-05-04T17:35:41+03:00</updated><id>http://www.akinabdullahoglu.com/Git%20Repository%20uzerinden%20proje%20nasil%20cekilir</id><content type="html" xml:base="http://www.akinabdullahoglu.com/Git-Repository-uzerinden-proje-nasil-cekilir/">&lt;p&gt;Merhaba arkadaşlar, git yazılarımın devamı olan bu yazımda yine sizlere ufak bilgiler aktarmaya çalışacağım. Hatırlarsanız önceki yazı serilerimde bitbucket üzerinde repository oluşturmayı, bir proje örneğini git server üzerine aktarmayı ve gitignore tanımlamasının nasıl yapıldığına dair yazılar paylaşmıştım. Bugün ise daha önceden sunucuya aktarılmış olan bir git repository’sini kendi bilgisayarımıza nasıl aktarılacağını inceleyeceğiz. Öncelikle bitbucket üzerinde çalışma yapıyorsak eğer repository detayındaki clone menüsüne tıkladığımızda bize bir &lt;strong&gt;git clone&lt;/strong&gt; linki veriyor ve her oluşturduğumuz repo içinde bir .&lt;strong&gt;git&lt;/strong&gt; uzantılı benzersiz bir link oluşturuyor.  Önceki projemizden bir ekran görüntüsü olan linki aşağıdaki şekilde görebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/Images/2016/05/clone.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Var olan bir repository’i bilgisayarımıza almak için kullanmamız gereken komut git clone komutudur. Adından da anlaşılacağı üzere linki verilen proje reposunun clone’unu alarak bilgisayarımızdaki çalıştığımız dizine almamızı sağlar. Tüm ignore tanımlaması, config yapılandırılması ile birlikte tüm özellikleri barındırır.&lt;/p&gt;

&lt;p&gt;Ben çalışmalarımı &lt;strong&gt;CMDER.exe&lt;/strong&gt;  uygulaması üzerinden yaptığımdan dolayı örneklendirmeyi de onun üzerinden gerçekleştireceğim. &lt;strong&gt;CMDER.exe&lt;/strong&gt;‘yi çalıştırarak projeyi almak istediğimiz working directory’mize gidelim.&lt;/p&gt;

&lt;p&gt;Aşağıdaki gif imajını açarak uygulamanız gereken komutu örnek olarak görebilirsiniz.
&lt;img src=&quot;/Images/2016/05/bitbucket-git-clone.gif&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gördüğünüz gibi artık uzan sunucuda bulunan proje dosyalarımız &lt;strong&gt;C:\Projects&lt;/strong&gt; altında ve artık ortak bir projeyi bilgiayar dosya sistemine bağımlı kalmadan güvenli bir şekilde geliştirebiliriz.&lt;/p&gt;

&lt;p&gt;Dikkat etmeniz gereken noktalar ile ilgili ileride bir yazı yayımlayacağım fakat şimdilik aklıma gelen birkaç hususu belirteyim.&lt;/p&gt;

&lt;p&gt;Eğer projeyi sunucudan almışsak ve çalışıyorsak bu projemizde farklı bir arkadaşta geliştirme yapıyorsa ve o commit‘ini master branch‘e göndermişse ve bizde kendimiz farklı dosyalarda geliştirme yapıyorsak yapmamız gereken aşamalar aşağıdaki gibidir.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add *&lt;/code&gt; veya . bu tüm dosyaları baz alarak ekleme yapar. &lt;code class=&quot;highlighter-rouge&quot;&gt;git add – filename&lt;/code&gt; vererek sadece spesifik dosya aktarımı da yapabiliriz. Öncelikle add ile local repository’mize dosyalarımızı ekleyelim, sonrasında ise git commit -m “commit mesajınız” ile local commitimizi tamamlayalım. Sonrasında ise git pull –rebase origin master komutu ile var olan repository’mize master branch’imizin güncel halini alalım. Dosyalar güncellendikten sonra projemizi kontrol edip, son push ilemini gerçekleştirerek master branch üzerine dosyaların aktarımını sağlayalım.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt; komutunu kullanarak lokal repomuzdaki dosyalarımızı uzak sunucudaki repomuza göndererek &lt;strong&gt;master branch&lt;/strong&gt;‘imizi güncel tutalım.&lt;/p&gt;

&lt;p&gt;Bir yazının daha sonuna geldik umarım sizlere bir şeyler aktarabilmişimdir.&lt;/p&gt;

&lt;p&gt;Sorularınız, önerileriniz ve düzeltmeleriniz olur ise her zaman yorumlarınızı bekliyorum.&lt;/p&gt;

&lt;p&gt;Yazımı sevdiğim bir Barış Manço parçası ile sonlandırıyorum.&lt;/p&gt;

&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/DxCLKJE7FVU?ecver=1&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Merhaba arkadaşlar, git yazılarımın devamı olan bu yazımda yine sizlere ufak bilgiler aktarmaya çalışacağım. Hatırlarsanız önceki yazı serilerimde bitbucket üzerinde repository oluşturmayı, bir proje örneğini git server üzerine aktarmayı ve gitignore tanımlamasının nasıl yapıldığına dair yazılar paylaşmıştım. Bugün ise daha önceden sunucuya aktarılmış olan bir git repository’sini kendi bilgisayarımıza nasıl aktarılacağını inceleyeceğiz. Öncelikle bitbucket üzerinde çalışma yapıyorsak eğer repository detayındaki clone menüsüne tıkladığımızda bize bir git clone linki veriyor ve her oluşturduğumuz repo içinde bir .git uzantılı benzersiz bir link oluşturuyor. Önceki projemizden bir ekran görüntüsü olan linki aşağıdaki şekilde görebilirsiniz.</summary></entry></feed>